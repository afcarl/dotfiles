#------------------------------------------------------------------------------------------
#  LINE COLOR (a.k.a status_style)
#------------------------------------------------------------------------------------------

status_style=$reset_style'\[\033[0;90m\]' # gray color; use 0;37m for lighter color <== BACKUP
# status_style=$reset_style'\[\033[0;35m\]' # purple color

#------------------------------------------------------------------------------------------
#  PROMPT COLOR (a.k.a. prompt_style)
#------------------------------------------------------------------------------------------

prompt_style=$reset_style'\[\033[0;32m\]'

#------------------------------------------------------------------------------------------
#  TYPING COLOR (a.k.a. command_style)
#------------------------------------------------------------------------------------------

command_style=$reset_style'\[\033[1;33m\]' # whitish-yellow

#------------------------------------------------------------------------------------------
#  Elements to include in separator line
#------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------
#  PROMPT (PS1)
#------------------------------------------------------------------------------------------

# Prompt variable: 
# \u=username; \h=hostname; \w=absolute path
# PS1=$status_style$LINE_CONTENTS_HEAD$fill$LINE_CONTENTS_TAIL'\n'"$prompt_style"'${debian_chroot:+($debian_chroot)}\w \$ '"$command_style "

# (this one is invoked every time before a command is executed):
trap 'echo -ne "\033[00m"' DEBUG

#------------------------------------------------------------------------------------------
#  SEPARATOR LINE
#------------------------------------------------------------------------------------------

# Fill with dashes
# (this is recalculated every time the prompt is shown in function prompt_command):

fill="--- "
reset_style='\[\033[00m\]'

function prompt_command {


	PS1=$status_style$fill$LINE_CONTENTS_TAIL'\n'"$prompt_style"'${debian_chroot:+($debian_chroot)}\w \$ '"$command_style "

	PWD_SHORT=$(echo -n $PWD | sed -e "s/\/Users\/$USER/\~/ " )	# Use ~ for homedir
	LINE_CONTENTS_HEAD="|---[ $PWD_SHORT ]---"
	LINE_CONTENTS_TAIL="---[ $USER@$HOSTNAME ]---[ $(date +%H:%M:%S) ]---|"
	PADDING="1" 		# Some stuff doesn't get counted correctly
	LINEWC=$((${#LINE_CONTENTS_TAIL} + $PADDING)) 	# Count number of characters to adjust line length

	# create a $fill equal to screen width minus the variables in separator line:
	let fillsize=${COLUMNS}-$LINEWC
	fill=""
	while [ "$fillsize" -gt "0" ]
		do
		fill="-${fill}" # fill with underscores/hyphens/tildes/whatever
		let fillsize=${fillsize}-1
	done
	}

PROMPT_COMMAND=prompt_command

